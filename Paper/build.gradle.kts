/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {

    `java-library`
    `maven-publish`
    id("java")
    id("com.gradleup.shadow") version "9.0.0-beta16" apply true
}

repositories {

    maven("https://repo.nexomc.com/releases")
    maven("https://repo.xenondevs.xyz/releases")
    maven("https://repo.oraxen.com/releases")
    maven {
        name = "papermc"
        url = uri("https://repo.papermc.io/repository/maven-public/")
    }
}

val paperApiVersion = property("io-papermc-paper-paper-api")!!
val nexoVersion = property("com-nexomc-nexo")!!
val novaApiVersion = property("xyz-xenondevs-nova-nova-api")!!
val oraxenVersion = property("io-th0rgal-oraxen")!!

dependencies {
    shadow(project(":TNIL-Core"))
    shadow(project(":TNIL-BukkitBase"))
    compileOnly("io.papermc.paper:paper-api:$paperApiVersion")
    compileOnly("xyz.xenondevs.nova:nova-api:$novaApiVersion")
    compileOnly("com.nexomc:nexo:$nexoVersion")
    compileOnly("io.th0rgal:oraxen:$oraxenVersion")
}

java {

    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks {
    compileJava {
        sourceCompatibility = "21"
        targetCompatibility = "21"
    }

    jar {
        artifacts.add("archives", this)
        dependsOn(shadowJar)
        archiveFileName = "original-TNIL-Paper-${project.version}.jar"
    }

    shadowJar {
        artifacts.add("archives", this)
        archiveFileName = "TNIL-Paper-${project.version}.jar"

        configurations = listOf(project.configurations.shadow.get())
    }
}
publishing {
    publications {
        create<MavenPublication>("shadow") {
            groupId = property("tnil_group")!! as String?
            artifactId = "TNIL-Paper"
            version = property("tnil_version")!! as String?

            from(components["shadow"])
        }
    }

    repositories {
        val mavenUrl: String? by project
        val mavenSnapshotUrl: String? by project

        (if(version.toString().endsWith("SNAPSHOT")) mavenSnapshotUrl else mavenUrl)?.let { url ->
            maven(url) {
                val mavenUsername: String? by project
                val mavenPassword: String? by project
                if(mavenUsername != null && mavenPassword != null) {
                    credentials {
                        username = mavenUsername
                        password = mavenPassword
                    }
                }
            }
        }
    }
}

description = "The New Item Library Paper"
