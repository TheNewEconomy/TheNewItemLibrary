/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
    id("java")
    id("com.gradleup.shadow") version "9.0.0-beta16" apply true
}



repositories {

    maven("https://maven.fabricmc.net")
    maven("https://s01.oss.sonatype.org/content/repositories/snapshots/")
    maven("https://oss.sonatype.org/content/repositories/snapshots/")
    maven("https://jitpack.io")
    maven("https://plugins.gradle.org/m2/")
    maven("https://repo.codemc.io/repository/maven-public/")
    maven("https://maven.devs.beer/")
    maven("https://repo.nexomc.com/releases")
    maven("https://repo.oraxen.com/releases")
    maven("https://repo.xenondevs.xyz/releases")
    maven("https://nexus.phoenixdevt.fr/repository/maven-public/")
    maven("https://repo.auxilor.io/repository/maven-public/")
    maven("https://mvn.lumine.io/repository/maven-public/")
}

val spigotApiVersion = property("org-spigotmc-spigot-api")!!
dependencies {
    shadow(project(":TNIL-Core"))
    shadow(project(":TNIL-BukkitBase"))
    compileOnly("org.spigotmc:spigot-api:$spigotApiVersion")
}

java {

    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks {
    compileJava {
        sourceCompatibility = "17"
        targetCompatibility = "17"
    }

    jar {
        enabled = false
    }

    shadowJar {
        archiveFileName = "TNIL-Bukkit-${project.version}.jar"

        configurations = listOf(project.configurations.shadow.get())
    }
}

publishing {
    publications {
        create<MavenPublication>("mavenJava") {
            groupId = property("tnil_group")!! as String?
            artifactId = "TNIL-Bukkit"
            version = property("tnil_version")!! as String?

            from(components["java"])
        }
    }

    repositories {
        val mavenUrl = "https://repo.codemc.io/repository/maven-releases/"
        val mavenSnapshotUrl = "https://repo.codemc.io/repository/maven-snapshots/"

        (if(version.toString().endsWith("SNAPSHOT")) mavenSnapshotUrl else mavenUrl)?.let { url ->
            maven(url) {
                val mavenUsername: String? by project
                val mavenPassword: String? by project
                if(mavenUsername != null && mavenPassword != null) {
                    credentials {
                        username = mavenUsername
                        password = mavenPassword
                    }
                }
            }
        }
    }
}

description = "The New Item Library Bukkit"
