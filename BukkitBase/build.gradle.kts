/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
    id("java")
}

java {

    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {

    maven("https://s01.oss.sonatype.org/content/repositories/snapshots/")
    maven("https://oss.sonatype.org/content/repositories/snapshots/")
    maven("https://jitpack.io")
    maven("https://plugins.gradle.org/m2/")
    maven("https://repo.codemc.io/repository/maven-public/")
    maven("https://nexus.phoenixdevt.fr/repository/maven-public/")
    maven("https://repo.auxilor.io/repository/maven-public/")
    maven("https://mvn.lumine.io/repository/maven-public/")
}

val ecoItemsVersion = property("com-willfp-ecoitems")!!
val itemsAdderVersion = property("dev-lone-api-itemsadder")!!
val mmoItemsVersion = property("net-indyuce-mmoitems-api")!!
val mythicLibVersion = property("io-lumine-mythiclib-dist")!!
val slimefunVersion = property("com-github-slimefun-slimefun4")!!
val spigotApiVersion = property("org-spigotmc-spigot-api")!!

dependencies {
    shadow(project(":TNIL-Core"))
    compileOnly("com.github.LoneDev6:api-itemsadder:$itemsAdderVersion")
    compileOnly("com.github.Slimefun:Slimefun4:$slimefunVersion")
    compileOnly("io.lumine:MythicLib-dist:$mythicLibVersion")
    compileOnly("net.Indyuce:MMOItems-API:$mmoItemsVersion")
    compileOnly("com.willfp:ecoitems:$ecoItemsVersion")
    compileOnly("org.spigotmc:spigot-api:$spigotApiVersion")
}

tasks {

    compileJava {
        sourceCompatibility = "17"
        targetCompatibility = "17"

    }

    jar {
        dependsOn(shadowJar)
        archiveFileName = "original-TNIL-BukkitBase-${project.version}.jar"
    }

    shadowJar {
        archiveFileName = "TNIL-BukkitBase-${project.version}.jar"
    }
}

publishing {
    publications {
        create<MavenPublication>("shadow") {
            groupId = property("tnil_group")!! as String?
            artifactId = "TNIL-BukkitBase"
            version = property("tnil_version")!! as String?

            from(components["shadow"])
        }
    }

    repositories {
        val mavenUrl: String? by project
        val mavenSnapshotUrl: String? by project

        (if(version.toString().endsWith("SNAPSHOT")) mavenSnapshotUrl else mavenUrl)?.let { url ->
            maven(url) {
                val mavenUsername: String? by project
                val mavenPassword: String? by project
                if(mavenUsername != null && mavenPassword != null) {
                    credentials {
                        username = mavenUsername
                        password = mavenPassword
                    }
                }
            }
        }
    }
}

description = "The New Item Library Bukkit Base"
