/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
    id("java")
    id("com.gradleup.shadow") version "9.0.0-beta16" apply true
}

val spongeApiVersion = property("org-spongepowered-spongeapi")!!

dependencies {
    shadow(project(":TNIL-Core"))
    compileOnly("org.spongepowered:spongeapi:$spongeApiVersion")
}

repositories {
    mavenCentral()
    maven {
        name = "sponge-repo"
        url = uri("https://repo.spongepowered.org/repository/maven-public/")
    }
}

java {

    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks {
    compileJava {
        sourceCompatibility = "21"
        targetCompatibility = "21"
    }

    jar {
        enabled = false
    }

    shadowJar {
        archiveFileName = "TNIL-Sponge-${project.version}.jar"

        configurations = listOf(project.configurations.shadow.get())
    }
}

publishing {
    publications {
        create<MavenPublication>("shadow") {
            groupId = property("tnil_group")!! as String?
            artifactId = "TNIL-Sponge"
            version = property("tnil_version")!! as String?

            from(components["shadow"])
        }
    }

    repositories {
        val mavenUrl = "https://repo.codemc.io/repository/maven-releases/"
        val mavenSnapshotUrl = "https://repo.codemc.io/repository/maven-snapshots/"

        (if(version.toString().endsWith("SNAPSHOT")) mavenSnapshotUrl else mavenUrl)?.let { url ->
            maven(url) {
                val mavenUsername: String? by project
                val mavenPassword: String? by project
                if(mavenUsername != null && mavenPassword != null) {
                    credentials {
                        username = mavenUsername
                        password = mavenPassword
                    }
                }
            }
        }
    }
}

description = "The New Item Library Sponge"
